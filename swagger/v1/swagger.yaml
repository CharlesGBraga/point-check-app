---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/authentications":
    post:
      summary: Authentication
      tags:
      - Authentications
      parameters: []
      responses:
        '201':
          description: Created token
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: J천ao da Silva
                  email:
                    type: string
                    example: email@gmail.com
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NiwibmFtZSI6IkRyLiBHcmVnZyBCZWNrZXIgNyIsImVtYWlsI
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                authentication:
                  type: object
                  properties:
                    email:
                      type: string
                      example: email@gmail.com
                    password:
                      type: string
                      example: minhasenha***
  "/users":
    get:
      summary: List users
      tags:
      - Users
      security:
      - bearer: []
      parameters:
      - name: q[name_eq]
        in: query
        description: Search by name
        required: false
        example: name
        schema:
          type: string
      - name: q[cpf_eq]
        in: query
        description: Search by cpf
        required: false
        example: '12345678912'
        schema:
          type: string
      - name: q[admin_eq]
        in: query
        description: Search by admin
        required: false
        example: 'true'
        schema:
          type: string
      responses:
        '200':
          description: users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/User"
                  included:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Company"
                  meta:
                    type: object
                    properties:
                      pagination:
                        "$ref": "#/components/schemas/Pagination"
        '401':
          description: return unauthorized
    post:
      summary: Create a user
      tags:
      - Users
      security:
      - bearer: []
      description: Create and manage users
      parameters: []
      responses:
        '201':
          description: return a user created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    "$ref": "#/components/schemas/User"
                  included:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Company"
        '422':
          description: Unprocessible Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Jo찾o da Silva
                    email:
                      type: string
                      example: example@teste.com
                    cpf:
                      type: string
                      example: '01201201201'
                    password:
                      type: string
                      example: minhasenha**
                    admin:
                      type: boolean
                      example: true
  "/users/{id}":
    get:
      summary: Show User
      tags:
      - Users
      description: Show user
      security:
      - bearer: []
      parameters:
      - name: id
        in: path
        required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    items:
                      "$ref": "#/components/schemas/User"
                  included:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Company"
        '404':
          description: not found
    put:
      summary: Update User
      tags:
      - Users
      description: Update user
      security:
      - bearer: []
      parameters:
      - name: id
        in: path
        required: true
      responses:
        '202':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    items:
                      "$ref": "#/components/schemas/User"
                  included:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Company"
        '422':
          description: Unprocessible Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: J천ao da Silva
                email:
                  type: string
                  example: example@teste.com
                cpf:
                  type: string
                  example: '01201201201'
                password:
                  type: string
                  example: testes
                admin:
                  type: boolean
                  example: true
    delete:
      summary: Destroy User
      tags:
      - Users
      description: Delete user
      security:
      - bearer: []
      parameters:
      - name: id
        in: path
        description: user ID
        required: true
        schema:
          type: string
      responses:
        '204':
          description: deleted
        '404':
          description: not found
components:
  schemas:
    Pagination:
      type: object
      properties:
        current:
          type: integer
        previous:
          type: integer
          nullable: true
        next:
          type: integer
          nullable: true
        per_page:
          type: integer
        pages:
          type: integer
        total_count:
          type: integer
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          type: string
          example: users
        attributes:
          type: object
          properties:
            name:
              type: string
              example: J천ao da Silva
            email:
              type: string
              example: example@teste.com
            cpf:
              type: string
              example: '01201201201'
            admin:
              type: boolean
              example: 'true'
            created_at:
              type: string
              example: '2020-04-26T10:20:00.000Z'
            updated_at:
              type: string
              example: '2020-04-26T10:20:00.000Z'
            company_id:
              type: integer
              example: 1205
    Company:
      type: object
      properties:
        id:
          type: integer
          example: 1205
        type:
          type: string
          example: company
        attributes:
          type: object
          properties:
            name:
              type: string
              example: Empresa SA
            phone:
              type: string
              example: 739.412.0117
            cnpj:
              type: string
              example: '74865142854440'
            created_at:
              type: string
              example: '2020-04-26T10:20:00.000Z'
            updated_at:
              type: string
              example: '2020-04-26T10:20:00.000Z'
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
